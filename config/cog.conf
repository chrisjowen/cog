# ========================================================================
# Cog Telemetry - By default, Cog is configured to send an event to the
# Operable telemetry service every time it starts. This event contains a
# unique ID (based on the SHA256 of the UUID for your operable bundle),
# the Cog version number, and the Elixir mix environment (:prod, :dev, etc)
# that Cog is running under.
# If you would like to opt-out of sending this data, you can set the
# COG_TELEMETRY environment variable to "false".
# ========================================================================
cog.telemetry = true

# ========================================================================
# Set this to :unenforcing to globally disable all access rules.
# NOTE: This is a global setting.
# ========================================================================
# Allowed values: enforcing, unenforcing
cog.rules.mode = enforcing

# Message bus server host name
cog.mqtt.host = "127.0.0.1"

# Message bus server port
cog.mqtt_port = 1883

# Path to SSL certificate
# cog.mqtt.cert_file = 

# Path to SSL private key file
# cog.mqtt.key_file = 

# Enables/disables spoken commands
cog.commands.allow_spoken = false

# Prefix used to indicate spoken command
cog.command.prefix = "!"

# Interactive pipeline execution timeout
cog.pipeline.timeout = 60

# Trigger execution timeout
cog.trigger.timeout = 300

# ========================================================================
# Embedded Command Bundle Version (for built-in commands)
# NOTE: Do not change this value unless you know what you're doing.
# ========================================================================
cog.embedded_bundle_version = "0.15.0"

# Enabled chat providers
cog.chat.providers = Elixir.Cog.Chat.Slack.Provider

# Slack API token
# cog.chat.slack.api_token = 

